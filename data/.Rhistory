labourData$Prod = as.numeric(labourData$Prod )
labourData$`LTU` = as.numeric(labourData$`LTU`)
#Load libraries
library(readxl)
library(ggplot2)
library(dplyr)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
#Convert data from string to integer
labourData$Year = as.numeric(labourData$Year)
labourData$W = as.numeric(labourData$W)
labourData$U = as.numeric(labourData$U)
labourData$`inf` = as.numeric(labourData$`inf`)
labourData$Prod = as.numeric(labourData$Prod )
labourData$`LTU` = as.numeric(labourData$`LTU`)
View(labour_data)
labourData$inflation = as.numeric(labourData$`inf`)
labourData$Prod = as.numeric(labourData$Prod )
labourData$`LTU` = as.numeric(labourData$`LTU`)
View(labour_data)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
View(labour_data)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 2)
View(labour_data)
#Load libraries
library(readxl)
library(ggplot2)
library(dplyr)
View(labourData)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
#Convert data from string to integer
labourData$Year = as.numeric(labourData$Year)
labourData$W = as.numeric(labourData$W)
labourData$U = as.numeric(labourData$U)
labourData$inflation = as.numeric(labourData$`inf`)
View(labourData)
labourData$Prod = as.numeric(labourData$Prod )
labourData$`LTU` = as.numeric(labourData$`LTU`)
View(lmLabourData)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
View(labourData)
labourData$inf = as.numeric(labourData$`inf`)
#Create new variables
labourData$`lnwage` =  log(labourData$W)
View(labourData)
#Create new variables
labourData$`lNW` =  log(labourData$W)
View(labour_data_year)
View(lmLabourData)
View(labourData)
labourData$`DLNW` =  lag(labourData$LNW )*labourData$LNW
labourData$LagLNW =  lag(labourData$LNW )
labourData$LagLNW =  lag(labourData$`LNW`)
View(labourData)
labourData$LagLNW =  lag(labourData$`lNW`)
View(labourData)
#Replace NAs in lag term
is.na(labourData$LagLNW)
<- 0
#Replace NAs in lag term
is.na(labourData$LagLNW) = 0
View(labourData)
#Replace NAs in lag term
is.na(labourData$LagLNW) = 0
#Replace NAs in lag term
labourDataW[is.na(labourData$LagLNW)]
#Replace NAs in lag term
labourData[is.na(labourData$LagLNW)]
#Replace NAs in lag term
is.na(labourData$LagLNW)
#Replace NAs in lag term
is.na(labourData$LagLNW) = 0
View(labourData)
#Replace NAs in lag term
is.na(labourData$LagLNW) -> 0
#Replace NAs in lag term
is.na(labourData$LagLNW) <- 0
View(lmLabourData)
View(labourData)
#Replace NAs in lag term
labourData[is.na(labourData$LagLNW)] <- 0
#Replace NAs in lag term
labourData[is.na(labourData)] <- 0
View(labourData)
labourData$LagLNW =  lag(labourData$`lNW`) %>% labourData[is.na(labourData)] <- 0
labourData$DLW = labourData$LagLNW * labourData$`lNW`
View(labourData)
ggplot(data=labourData, aes(x=Year, y=`Average annual wages`, group=1)) +
geom_line()
ggplot(data=labourData, aes(x=Year, y=`W`, group=1)) +
geom_line()
labourData$DLw = labourData$LagLNW * labourData$`lNW`
labourData$`Lprod` = as.numeric(labourData$`Prod`)
#Run the regression
lmLabourData = lm( DLw ~ u, inf , LTU , Lprod  ,data =labourData )
#Run the regression
lmLabourData = lm( DLw ~ U, inf , LTU , Lprod  ,data =labourData )
#Run the regression
lmLabourData = lm( DLw ~ U, Inf , LTU , Lprod  ,data =labourData )
labourData$lprod = log(labourData$Productivity)
labourData$Lprod = log(labourData$Prod)
#Run the regression
lmLabourData = lm( DLw ~ U, `Inf`, LTU , Lprod  ,data =labourData )
#Run the regression
lmLabourData = lm( DLw ~ U, `Inf`, LTU , Lprod  ,data =labourData )
#Run the regression
lmLabourData = lm( DLw ~ U, `Inf`, LTU , lprod  ,data =labourData )
labourData$`Lprod`
#Run the regression
lmLabourData = lm( DLw ~ U, `Inf`, LTU , `Lprod`   ,data =labourData )
#Run the regression
lmLabourData = lm( DLw ~ U, `Inf`, LTU , `Lprod`   ,data =labourData )
#Run the regression
lmLabourData = lm( DLw ~ U +`Inf`+ LTU + `Lprod`   ,data =labourData )
summary(lmLabourData)
#Run the regression
lmLabourData = lm( DLw ~ U + Inf + LTU + `Lprod`   ,data =labourData )
#Run the regression
lmLabourData = lm( DLw ~ U + `Inf` + LTU + `Lprod`   ,data =labourData )
summary(lmLabourData)
View(labourData)
labourData$LagLNW =  lag(labourData$`lNW`) %>%  print()
labourData[is.na(labourData)] = 0 #Replace NA's in lag term
labourData$DLw = labourData$LagLNW * labourData$`lNW`
labourData$DLw = labourData$LagLNW * labourData$`lNW` %>%  print()
#Load libraries
library(readxl)
library(ggplot2)
library(dplyr)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
#Convert data from string to integer
labourData$Year = as.numeric(labourData$Year)
labourData$W = as.numeric(labourData$W)
labourData$U = as.numeric(labourData$U)
labourData$inf = as.numeric(labourData$`inf`)
labourData$Prod = as.numeric(labourData$Prod )
labourData$`LTU` = as.numeric(labourData$`LTU`)
labourData$`Lprod` = as.numeric(labourData$`Prod`)
labourData$`Lprod`
#Create new variables
labourData$`lNW` =  log(labourData$W) #log of wage
labourData$LagLNW =  lag(labourData$`lNW`) %>%  print()
labourData[is.na(labourData)] = 0 #Replace NA in the lag term
labourData$DLw = labourData$LagLNW * labourData$`lNW` %>%  print()
labourData$Lprod = log(labourData$Prod)
ggplot(data=labourData, aes(x=Year, y=`W`, group=1)) +
geom_line()
#Run the regression
lmLabourData = lm( DLw ~ U + `Inf` + LTU + `Lprod`   ,data =labourData )
summary(lmLabourData)
labourData$DLw = diff(labourData$`lNW`, differences = 1) %>%  print()
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
#Convert data from string to integer
labourData$Year = as.numeric(labourData$Year)
labourData$W = as.numeric(labourData$W)
labourData$U = as.numeric(labourData$U)
labourData$inf = as.numeric(labourData$`inf`)
labourData$Prod = as.numeric(labourData$Prod )
labourData$`LTU` = as.numeric(labourData$`LTU`)
labourData$`Lprod` = as.numeric(labourData$`Prod`)
labourData$`Lprod`
#Create new variables
labourData$`lNW` =  log(labourData$W) #log of wage
labourData$LagLNW =  lag(labourData$`lNW`) %>%  print()
labourData[is.na(labourData)] = 0 #Replace NA in the lag term
labourData$DLw = diff(labourData$`lNW`, differences = 1) %>%  print()
labourData$`lNW`
diff(labourData$`lNW`)
diff(labourData$`lNW`)
diff(labourData$`lNW`,differences = 1)
diff(labourData$`lNW`,differences = 1)
View(labourData)
labourData$DLw = diff(labourData$`lNW`,differences = 1) %>%  print()
labourData$DLw = 0
View(labourData)
labourData$DLw = diff(labourData$`lNW`,differences = 1) %>%  print()
labourData$DLw =
diff(labourData$`lNW`,differences = 1)
labourData$DLw =
diff(labourData$`lNW`,differences = 1)
diff(labourData$`lNW`,differences = 1)
diff(labourData$`lNW`,differences = 1) %>%  length()
differencedCol = diff(labourData$`lNW`,differences = 1) %>%  length()
differencedCol
differencedCol
differencedCol[1]
differencedCol = diff(labourData$`lNW`,differences = 1)
differencedCol[1]
differencedCol[1:29]
labourData$DLw[1:29]
labourData$DLw[1:29] = differencedCol[1:29]
labourData$DLw[1:29] = diff(labourData$`lNW`,differences = 1)
labourData$DLW[1:29] = diff(labourData$`lNW`,differences = 1) # First difference of wages
#Create new variables
labourData$`lNW` =  log(labourData$W) #log of wage
labourData$DLw[1:29] = diff(labourData$`lNW`,differences = 1) # First difference of wages
labourData$DLW[1:29] = diff(labourData$`lNW`,differences = 1) # First difference of wages
View(labourData)
labourData$Lprod  =  log(labourData$Prod)
labourData$Lprod = log(labourData$Prod)
#Run the regression
lmLabourData = lm( DLw ~ U + `Inf` + LTU + `Lprod`   ,data =labourData )
summary(lmLabourData)
#Load libraries
library(readxl)
library(ggplot2)
library(dplyr)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
#Convert data from string to integer
labourData$Year = as.numeric(labourData$Year)
labourData$W = as.numeric(labourData$W)
labourData$U = as.numeric(labourData$U)
labourData$inf = as.numeric(labourData$`inf`)
labourData$Prod = as.numeric(labourData$Prod )
#Load libraries
library(readxl)
library(ggplot2)
library(dplyr)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
#Convert data from string to integer
labourData$Year = as.numeric(labourData$Year)
labourData$W = as.numeric(labourData$W)
labourData$U = as.numeric(labourData$U)
labourData$inf = as.numeric(labourData$`inf`)
labourData$inf = as.numeric(labourData$`inf`)
labourData$inf = as.numeric(labourData$`Inf`)
#Load libraries
library(readxl)
library(ggplot2)
library(dplyr)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
#Convert data from string to integer
labourData$Year = as.numeric(labourData$Year)
labourData$W = as.numeric(labourData$W)
labourData$U = as.numeric(labourData$U)
labourData$inf = as.numeric(labourData$`Inf`)
labourData$Prod = as.numeric(labourData$Prod )
labourData$`LTU` = as.numeric(labourData$`LTU`)
labourData$`Lprod` = as.numeric(labourData$`Prod`)
labourData$`Prod` = as.numeric(labourData$`Prod`)
#Create new variables
labourData$`lNW` =  log(labourData$W) #log of wage
labourData$DLw[1:29] = diff(labourData$`lNW`,differences = 1) # First difference of wages
#Create new variables
labourData$`lNW` =  log(labourData$W) #log of wage
labourData$DLW = 0 #Create columns of zeros to set up lagging
labourData$DLW[1:29] = diff(labourData$`lNW`,differences = 1) # First difference of wages
labourData$Lprod  =  log(labourData$Prod) #log productivity
labourData$Lprod = log(labourData$Prod)
labourData$Lprod  =  log(labourData$Prod) #log productivity
ggplot(data=labourData, aes(x=Year, y=`W`, group=1)) +
geom_line()
#Run the regression
lmLabourData = lm( DLw ~ U + `Inf` + LTU + `Lprod`   ,data =labourData )
summary(lmLabourData)
labourData$DLW[1:29]
labourData$DLW = 0 #Create columns of zeros to set up lagging
labourData$DLW[2:30] = diff(labourData$`lNW`,differences = 1) # First difference of wages
labourData$DLW[2:30]
labourData$DLW
labourData$Lprod  =  log(labourData$Prod) #log productivity
ggplot(data=labourData, aes(x=Year, y=`W`, group=1)) +
geom_line()
#Run the regression
lmLabourData = lm( DLw ~ U + `Inf` + LTU + `Lprod`   ,data =labourData )
summary(lmLabourData)
#Run the regression
lmLabourData = lm( DLw ~ U + `Inf` + LTU + `Lprod`   ,data =labourData[2:30] )
summary(lmLabourData)
[2:30]
labourData[2:30]
labourData[,2:30]
labourData[2:30,]
#Run the regression
lmLabourData = lm( DLw ~ U + `Inf` + LTU + `Lprod`   ,data =labourData[2:30,] )
summary(lmLabourData)
#Run the regression
lmLabourData = lm( DLw ~ U + `Inf` + LTU + `Lprod`   ,data =labourData[2:30,] )
#Run the regression
lmLabourData = lm( DLW ~ U + `Inf` + LTU + `Lprod`   ,data =labourData[2:30,] )
summary(lmLabourData)
View(labour_data)
#Read in raw data
labourData = read_excel("UKLabour.xls",skip = 1)
#Convert data from string to integer
labourData$Year = as.numeric(labourData$Year)
labourData$W = as.numeric(labourData$W)
labourData$U = as.numeric(labourData$U)
labourData$inf = as.numeric(labourData$`Inf`)
labourData$Prod = as.numeric(labourData$Prod )
labourData$`LTU` = as.numeric(labourData$`LTU`)
labourData$`Prod` = as.numeric(labourData$`Prod`)
#Create new variables
labourData$`lNW` =  log(labourData$W) #log of wage
labourData$DLW = 0 #Create columns of zeros to set up lagging
labourData$DLW[2:30] = diff(labourData$`lNW`,differences = 1) # First difference of wages
labourData$DLW
labourData$Lprod  =  log(labourData$Prod) #log productivity
#Plot data
ggplot(data=labourData, aes(x=Year, y=`W`, group=1)) +
geom_line()
#Run the regression
lmLabourData = lm( DLW ~ U + `Inf` + LTU + `Lprod`   ,data =labourData[2:30,] )
summary(lmLabourData)
#Run the regression
summary(lm( DLW ~ U + `Inf` + LTU + `Lprod`   ,data =labourData[2:30,] ))
100 * labourData$DLW
#Re-estimate the regression with the dependant as the percentage growth rate
labourData$`PerDlWw` = 100 * labourData$DLW
summary(lm( `PerDlWw` ~ U + `Inf` + LTU + `Lprod`   ,data =labourData[2:30,] ))
#Run the regression
linear_model_1 = lm( DLW ~ U + `Inf` + LTU + `Lprod`   ,data =labourData[2:30,] )
summary(linear_model_1)
linear_model_2 = lm( `PerDlWw` ~ U + `Inf` + LTU + `Lprod`   ,data =labourData[2:30,] )
summary(linear_model_2)
summary(linear_model_2)$coefficients
install.packages(vtable)
install.packages('vtable')
library(vtable)
library(vtable)
install.packages('kableExtra')
library(vtable)
install.packages('systemfonts')
library(vtable)
library(kableExtra)
library(vtable)
library(kableExtra)
library(systemfonts)
install.packages('systemfonts')
library(systemfonts)
library(kableExtra)
library(vtable)
slm2 = summary(linear_model_2)$coefficients
install.packages('xtable')
install.packages('knitr')
install.packages("knitr")
table = data.frame(xtable(linear_model_2))
library(xtable)
table = data.frame(xtable(linear_model_2))
kable(table)
table
install.packages('kable')
install.packages('PoEdata')
table = data.frame(xtable(linear_model_2))
table
table
table$Estimate[1]
table$Estimate['Inf']
table$Estimate[Inf]
table$Estimate[1]
b_1 = table$Estimate[1]
se = table$`Std..Error`
se = table$`Std..Error`[1]
(b1 - 1)/se
(b_1 - 1)/se
(b_1 - 0)/se
slm2
b_1 = table$Estimate[2] # coefficient on inflation
se = table$`Std..Error`[2] #standard error on inflation coefficeint
(b_1 - 0)/se
(b_1 - 1)/se
tstat =  (b_1 - 1)/se
df.residual(slm2)
df.residual(linear_model_2)
degreeOfFreedom
linearHypothesis(linear_model_2)
install.packages('car')
library(car)
linearHypothesis(linear_model_2,c("inf=0"))
linearHypothesis(linear_model_2,c("LTU=0"))
labourData$`Inf` = as.numeric(labourData$`Inf`)
linearHypothesis(linear_model_2,c("INF=1"))
linearHypothesis(linear_model_2,c("Inf=1"))
linearHypothesis(linear_model_2,c("`Inf`=1"))
linearHypothesis(linear_model_1 ,c("`Inf`=1"))
library(haven)
HBS_2017_18_Final_Individual_Data <- read_stata("~/Downloads/HBS_2017-18_Final_Individual_Data.zip")
View(HBS_2017_18_Final_Individual_Data)
library(haven)
HBS_2017_18_Consumption_Aggregate_and_Poverty_Analysis_VariablesS <- read_stata("~/Downloads/HBS_2017-18_Consumption_Aggregate_and_Poverty_Analysis_VariablesS.zip")
View(HBS_2017_18_Consumption_Aggregate_and_Poverty_Analysis_VariablesS)
install_github("Diviyan-Kalainathan/RCIT")
install.packages("devtools")
yes
install.packages("devtools")
library("devtools")
install_github("Diviyan-Kalainathan/RCIT")
install_github("Diviyan-Kalainathan/RCIT")
install_github("Diviyan-Kalainathan/RCIT", force= TRUE)
sort(.packages(all.available = TRUE))
install.packages('pcalg')
install.packages('kpcalg')
sort(.packages(all.available = TRUE))
sort(.packages(all.available = TRUE))
pkg = sort(.packages(all.available = TRUE))
pkg[1]
pkg["rcit"]
pkg["abind"]
install.packages("BiocManager")
BiocManager::install(c("CAM", "SID", "bnlearn", "pcalg", "kpcalg", "D2C"))
install.packages('kpcalg',fore=TRUE)
RSTUDIO_WHICH_R=$(which R)
system("type R")
R.home()
file.path(R.home("bin"), "R")
uninstall('kpcalg')
uninstall('RCIT')
remove.packages('RCIT')
install_github("Diviyan-Kalainathan/RCIT")
install.packages('RCIT')
library('RCIT')
pkg
install.packages('kpcalg')
install.packages('pcalg')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("graph", "RBGL", "Rgraphviz"))
library("party")
lgfortran
# ======== load libraries ========
install.packages("lgfortran", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
# ======== load libraries ========
install.packages("-lgfortran", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
library("rpart")
library("party")
# ======== load libraries ========
install.packages("party", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
install.packages('devtools') #assuming it is not already installed
library("party")
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(d')
updateR()
updateR()
library("party")
# ======== load libraries ========
install.packages("party", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
library("party")
classificiation_tree <- ctree(psFormula,data = nswRe74_total)
library("party")
# ======== load libraries ========
install.packages("mvtnorm", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
library("party")
# ======== load libraries ========
uninstall.packages("mvtnorm", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
uninstall(party)
uninstall("party")
remove.packages(party, lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/libraryb)
library("rpart")
library("rpart.plot")
library("readxl")
library("gbm")
library("multcomp")
library("party")
# ========  set working directory ========
setwd("/Users/mawuliagamah/gitprojects/causal_inference/causal_inference/datasets")
# ========  Load data set ========
nswRe74_treat <- read_xlsx("nswre74_treated.xlsx")
nswRe74_control <- read_xls("nswre74_control.xls")
nswRe74_total <- rbind(nswRe74_treat, nswRe74_control)
nswRe74_control <- drop(nswRe74_control$re78)
# ======== Random forest
classificiation_tree <- ctree(psFormula,data = nswRe74_total)
remove.packages(party, lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/libraryb)
library("rpart")
library("rpart.plot")
library("readxl")
library("gbm")
library("multcomp")
library("party")
# ========  set working directory ========
setwd("/Users/mawuliagamah/gitprojects/causal_inference/causal_inference/datasets")
# ========  Load data set ========
nswRe74_treat <- read_xlsx("nswre74_treated.xlsx")
nswRe74_control <- read_xls("nswre74_control.xls")
nswRe74_total <- rbind(nswRe74_treat, nswRe74_control)
nswRe74_control <- drop(nswRe74_control$re78)
# ======== Random forest
classificiation_tree <- ctree(psFormula,data = nswRe74_total)
remove.packages(party, lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
# ======== load libraries ========
uninstall.packages("party", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
# ======== load libraries ========
install.packages("party", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
library("party")
# ======== load libraries ========
install.packages("mvtnorm", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
library("party")
export PATH=$PATH:/usr/local/gfortran/bin
remove.packages("party", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
# ======== load libraries ========
install.packages("mvtnorm", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
library("party")
# ======== load libraries ========
install.packages("party", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
library("party")
library("party")
brew install gcc
brew update && brew reinstall r
brew link --overwrite r
# ======== load libraries ========
install.packages("party", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
